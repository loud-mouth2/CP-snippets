<snippet>
	<content><![CDATA[
const int MAXN=10000;
int n, tree[4*MAXN]={};

void build(int a[], int v, int tl, int tr)
{
	//setting tree leaf value
	if(tl==tr)
		tree[v] = a[tl];
	// otherwise
	else
	{
		int tm = (tl + tr) / 2;
		build(a, v*2, tl, tm);
		build(a, v*2+1, tm+1, tr);

		tree[v] = tree[v*2]*tree[v*2 + 1];
	}
}

int sum(int v, int tl, int tr, int l, int r)
{
	if(l > r)
		return 0;
	else if( l==tl && r==tr )
		return tree[v];
	else
	{
		int tm = (tl + tr)/2;
		return sum(v*2, tl, tm, l, min(r, tm)) + sum(v*2+1, tm+1, tr, max(l, tm+1), r);
	}
}

void update(int v, int tl, int tr, int pos, int newval)
{
	if(tl==tr)
		tree[v] = newval;
	else
	{
		int tm = (tl+tr)/2;
		if(pos <= tm)
			update(v*2, tl, tm, pos, newval);
		else
			update(v*2+1, tm+1, tl, pos, newval);
		tree[v] = tree[v*2] + tree[v*2 + 1];
	}
}

int SEGMENTtreeSUM(int arr[])
{
	//build(arr, 1, 0, n-1);
	//cout << sum(1, 0, n-1, starting_index, ending_index);

	return 0;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segmentTreeSum</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
