<snippet>
	<content><![CDATA[
const ll  maxn =1e6+5;
const ll mod=1e9+7;
ll prim[maxn],tot=0;
ll vis[maxn];
void sieve()
{
    for(int i=2;i<maxn;i++)
    {
        if(vis[i]==0) prim[tot++]=i;
        for(int j=0;j<tot;j++)
        {
            if(1LL*i*prim[j]>=maxn) break;
            int k=i*prim[j];  vis[k]=1;
            if(i%prim[j]==0) break;
        }
    }
}
 /// inverse factorial of the number of combinations
ll fac[maxn],inv[maxn];
void init()
{
    fac[0]=1;for(int i=1;i<maxn;i++) fac[i]=fac[i-1]*i%mod;
    inv[maxn-1]=powmod(fac[maxn-1],mod-2);
    for(int i=maxn-2;i>=0;i--) inv[i]=inv[i+1]*(i+1)%mod;
}
ll C(ll n,ll m)
{
    return fac[n]*inv[m]%mod*inv[n-m]%mod;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>ncrModFermat</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
