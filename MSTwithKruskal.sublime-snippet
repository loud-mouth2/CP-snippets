<snippet>
	<content><![CDATA[
vector<int> parent;
vector<int> rnk;

struct edge
{
	int weight;
	int u,v;
};

bool sortbyweight(edge a, edge b)
{
	return a.weight < b.weight;
}

void make_set(int v)
{
	parent[v]=v;
	rnk[v]=0;
}

int find_set(int a)
{
	if(parent[a]==a)
		return a;
	else
	{
		return parent[a] = find_set(parent[a]);
	}
}

void union_sets(int a, int b)
{
	a=find_set(a);
	b=find_set(b);
	if(a!=b)
	{
		if(rnk[a]<rnk[b])
			swap(a,b);
		parent[b]=a;
		if(rnk[a]==rnk[b])
			rnk[a]++;
	}
}

int MSTwithKruskal()
{
	int cost=0;
	int v;
	cin>>v;
	parent.resize(v+1);
	rnk.resize(v+1);

	for(int i=0; i<v; ++i)
		make_set(i+1);

	int ed;
	cin>>ed;

	vector<edge> eg;
	for (int i = 0; i < ed; ++i)
	{
		edge xx;
		cin>>xx.u>>xx.v>>xx.weight;
		eg.push_back(xx);
	}
	
	sort(eg.begin(), eg.end(), sortbyweight);
	
	vector<edge> result;
	for(edge xx:eg)
	{
		if(find_set(xx.u)!=find_set(xx.v))
		{
			cost += xx.weight;
			union_sets(xx.u, xx.v);
			result.push_back(xx);
		}
	}
	for(auto ele:result)
	{
		cout<<ele.u<<" - "<<ele.v<<" : "<<ele.weight<<endl;
	}
	return cost;
}
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>mstwithkruskal</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
